name: Weiss ADAPT Admin Deploy
run-name: ${{ github.actor }} pushed an update for env ${{ github.ref_name }}
on:
  push:
    paths:
      - 'apps/adapt-admin/**'
      - 'apps/libs/**'
      - 'libs/adapt-shared-component-lib/**'
      - 'libs/shared-assets/**'
      - 'libs/shared-styles/**'
    branches:
      - 'dev'
      - 'qa'
      - 'uat'
      - 'main'

env:
  AWS_CF_DISTRIBUTION: ${{ vars.AWS_CF_DISTRIBUTION }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET }}
  ANGULAR_ENVIRONMENT: ${{ vars.ANGULAR_ENVIRONMENT }}

jobs:
  deploy-angular:
    env:
      NX_NO_CLOUD: true
    runs-on: ubuntu-latest
    # can use this: ${{ github.ref == 'refs/heads/dev' && 'dev' || github.ref == 'refs/heads/qa' && 'qa' || 'default' }}
    # or github.ref_name, but it requires that the github environment has to be exactly the same as the given branch
    environment: ${{ github.ref_name }}
    steps:
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - name: Install dependencies (${{ github.ref_name }})
        run: npm i --force
      - name: Build Angular Application
        run: npx nx build adapt-admin --configuration ${{ env.ANGULAR_ENVIRONMENT }}
      - name: List files in the dist
        run: |
          ls ${{ github.workspace }}/dist
      - name: Upload S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          SOURCE_DIR: ${{ github.workspace }}/dist/apps/adapt-admin
      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION }}
          PATHS: '/*'
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: echo "This job's status is ${{ job.status }}."
